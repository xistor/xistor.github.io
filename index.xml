<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>xistor&#39;s blog</title>
    <link>https://xistor.github.io/</link>
    <description>Recent content on xistor&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 05 Jul 2020 16:01:00 +0800</lastBuildDate>
    
	<atom:link href="https://xistor.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Linux/Unix系统编程手册-笔记3.通用文件I/O</title>
      <link>https://xistor.github.io/post/linux/the-linux-programming-interface-s3/</link>
      <pubDate>Sun, 05 Jul 2020 16:01:00 +0800</pubDate>
      
      <guid>https://xistor.github.io/post/linux/the-linux-programming-interface-s3/</guid>
      <description>文件描述符：通常是一个小的非负整数，可以用来表示所有打开的文件。每个程序都会有三个标准文件描述符: File descriptor Purpose POSIX name stdio stream 0 standard input STDIN_FILENO stdin 1 standard output STDOUT_FILENO stdout 2 standard error STDERR_FILENO</description>
    </item>
    
    <item>
      <title>Linux/Unix系统编程手册-笔记2.系统调用</title>
      <link>https://xistor.github.io/post/linux/the-linux-programming-interface-s2/</link>
      <pubDate>Sun, 21 Jun 2020 16:01:00 +0800</pubDate>
      
      <guid>https://xistor.github.io/post/linux/the-linux-programming-interface-s2/</guid>
      <description>系统调用 系统调用将处理器从用户态切换到核心态，以便CPU访问收到保护的内核内存。 系统调用的组成是固定的。每个系统调用都有一个唯一的数字来标识</description>
    </item>
    
    <item>
      <title>Linux/Unix系统编程手册-笔记1.基本概念</title>
      <link>https://xistor.github.io/post/linux/the-linux-programming-interface-s1/</link>
      <pubDate>Thu, 28 May 2020 22:01:00 +0800</pubDate>
      
      <guid>https://xistor.github.io/post/linux/the-linux-programming-interface-s1/</guid>
      <description>简要记录整理下。 内核的职责 进程调度：Linux 属于抢占式多任务操作系统，由内核按照一定规则分配调度CPU给程序使用。 内存管理：物理内存属于有</description>
    </item>
    
    <item>
      <title>Android 使用AIDL添加 native service</title>
      <link>https://xistor.github.io/post/add-native-service/</link>
      <pubDate>Wed, 27 May 2020 23:03:16 +0800</pubDate>
      
      <guid>https://xistor.github.io/post/add-native-service/</guid>
      <description>1. 下载 AOSP源码，配置编译环境 略 2. 目录结构 device下新建一个sample目录保存我们即将写的native服务,我的目录结构如下，这个s</description>
    </item>
    
    <item>
      <title>树莓派4B USB硬盘启动</title>
      <link>https://xistor.github.io/post/rpi4-boot-from-usb/</link>
      <pubDate>Sun, 08 Mar 2020 22:03:16 +0800</pubDate>
      
      <guid>https://xistor.github.io/post/rpi4-boot-from-usb/</guid>
      <description>树莓派4B 官方还没有提供从USB启动的方案，不过可以使用之前更改cmdline.txt的方法实现。 我的树莓派已经使用SD卡跑了挺长时间了，不</description>
    </item>
    
    <item>
      <title>K2路由器Pandavan配置frp实现内网穿透</title>
      <link>https://xistor.github.io/post/k2-frp-setting/</link>
      <pubDate>Thu, 23 Aug 2018 21:42:00 +0800</pubDate>
      
      <guid>https://xistor.github.io/post/k2-frp-setting/</guid>
      <description>树梅派跑起来后，肯定是能够随时随地访问才够方便，但是家中的宽带没有固定ip,而且pi又躲在路由器后面，因此想要访问的话必须曲线一下，有好多方</description>
    </item>
    
  </channel>
</rss>